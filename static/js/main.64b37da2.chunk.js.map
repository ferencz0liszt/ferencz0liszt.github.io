{"version":3,"sources":["components/appHeader/AppHeader.tsx","resources/img/mjolnir.png","services/MarvelService.tsx","components/spinner/Spinner.tsx","components/errors/error.gif","components/errors/error.tsx","components/errorBoundaries/errorBoundary.tsx","components/randomChar/RandomChar.tsx","components/charList/CharList.tsx","components/skeleton/Skeleton.tsx","components/charInfo/CharInfo.tsx","resources/img/vision.png","components/app/App.tsx","index.tsx"],"names":["AppHeader","className","href","Component","MarvelService","_apiBase","_apiKey","_baseOffset","_baseLimit","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","item","_transformCharacter","getCharacter","id","character","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","style","display","margin","ErrorMessage","src","Img","alt","width","height","objectFit","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","RandomChar","undefined","loading","onCharacterLoad","length","slice","onError","updateCharacter","Math","floor","random","then","catch","newRandomCharacter","errorMessage","spinner","content","onClick","mjolnir","View","img","CharList","characters","loadingMore","charactersEnded","itemRefs","setRef","ref","push","onCharactersLoad","newCharacters","ended","onLoadingMore","focusOnItem","index","forEach","classList","remove","add","focus","loadMore","itemView","onSelect","tabIndex","disabled","Skeleton","correctDescription","i","CharInfo","marvelService","selectedId","onLoading","prevProps","prevState","skeleton","App","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64b37da2.chunk.js","sourcesContent":["import './appHeader.scss';\nimport {Component} from \"react\";\n\nclass AppHeader extends Component {\n    render() {\n        return (\n            <header className=\"app__header\">\n                <h1 className=\"app__title\">\n                    <a href=\"#\">\n                        <span>Marvel</span> API application\n                    </a>\n                </h1>\n                <nav className=\"app__menu\">\n                    <ul>\n                        <li><a href=\"#\">Characters</a></li>\n                        /\n                        <li><a href=\"#\">Comics</a></li>\n                    </ul>\n                </nav>\n            </header>\n        )\n    }\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=2bd0b149ee4a69238b62969f2594fc44';\n    _baseOffset = 340;\n    _baseLimit = 9;\n\n    // 2bd0b149ee4a69238b62969f2594fc44 - chrome\n    // d3873c8e78b189295466bbb197dff8f2 - chrome.dev\n\n    getResource = async (url: string) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=${this._baseLimit}&offset=${offset}&${this._apiKey}`);\n\n        return res.data.results.map((item: {}) => this._transformCharacter(item));\n    }\n\n    getCharacter = async (id: number) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (character: any) => {\n        return {\n            name: character.name,\n            description: character.description,\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n            homepage: character.urls[0].url,\n            wiki: character.urls[1].url,\n            id: character.id,\n            comics: character.comics.items,\n        }\n    }\n\n}\n\nexport default MarvelService;","import {FC} from \"react\";\n\nimport './Spinner.scss';\n\nconst Spinner: FC = () => {\n    return (\n        <>\n            <div className=\"loadingio-spinner-spinner-2hdzg32gl7c\"\n                 style={{display: \"block\", margin: \"0 auto\"}}\n            >\n                <div className=\"ldio-qczcq7e66g\">\n                    <div></div><div></div><div></div><div></div><div></div><div></div>\n                    <div></div><div></div><div></div><div></div><div></div><div></div>\n                </div></div>\n        </>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.eb44b0ba.gif\";","import Img from './error.gif'\nimport {FC} from \"react\";\n\nconst ErrorMessage: FC = () => {\n    return(\n        <img\n            src={Img}\n            alt=\"Error\"\n            style={{\n                display: \"block\",\n                width: \"250px\",\n                height: \"250px\",\n                objectFit: \"contain\",\n                margin: \"0 auto\"\n            }}/>\n    )\n}\n\nexport default ErrorMessage;","import {Component, ErrorInfo} from \"react\";\n\ninterface state {\n    error: boolean\n}\n\nclass ErrorBoundary extends Component<any, state> {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n        console.log(error, errorInfo);\n        this.setState({error: true})\n    }\n\n    render() {\n        if (this.state.error) {\n            return <div>Something went wrong.</div>\n        } else {\n            return this.props.children;\n        }\n    }\n}\n\nexport default ErrorBoundary;","import './randomChar.scss';\nimport {Component, FC} from \"react\";\n\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errors/error\";\nimport ErrorBoundary from \"../errorBoundaries/errorBoundary\";\n\n\ninterface RandomCharState {\n    character: {\n        name: string | undefined\n        description: string | undefined,\n        thumbnail: string | undefined,\n        homepage: string | undefined,\n        wiki: string | undefined,\n    },\n    loading: boolean,\n    error: boolean,\n}\n\nclass RandomChar extends Component<any, RandomCharState> {\n\n    state = {\n        character: {\n            name: undefined,\n            description: undefined,\n            thumbnail: undefined,\n            homepage: undefined,\n            wiki: undefined,\n        },\n        loading: true,\n        error: false,\n    }\n\n    MarvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharacter();\n    }\n\n    onCharacterLoad = (character: any) => {\n        if (character.description === '') {\n            character.description = \"This character haven't got a description yet.\"\n        } else if (character.description.length >= 160) {\n            character.description = character.description.slice(0, 159) + '...';\n        }\n        this.setState({character, loading: false});\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateCharacter: any = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.MarvelService\n            .getCharacter(id)\n            .then(this.onCharacterLoad)\n            .catch(this.onError);\n    }\n\n    newRandomCharacter = () => {\n        this.setState({error: false, loading: true});\n        this.updateCharacter();\n    }\n\n    render() {\n        const { character, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View character={character}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button\n                        className=\"button button__main\"\n                        onClick={() => this.newRandomCharacter()}\n                    >\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\ninterface ViewProps {\n    character: any;\n}\n\nconst View: FC<ViewProps> = ({character}) => {\n    const { name, description, thumbnail, homepage, wiki } = character;\n    const img = (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\")\n        ? <img src={thumbnail} style={{objectFit: \"contain\"}} alt=\"Random character\" className=\"randomchar__img\"/>\n        : <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>;\n\n    return(\n        <ErrorBoundary>\n            <div className=\"randomchar__block\">\n                {img}\n                <div className=\"randomchar__info\">\n                    <p className=\"randomchar__name\">\n                        {name}\n                    </p>\n                    <p className=\"randomchar__descr\">\n                        {description}\n                    </p>\n                    <div className=\"randomchar__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </ErrorBoundary>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport {Component, createRef, Ref} from \"react\";\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errors/error\";\nimport ErrorBoundary from \"../errorBoundaries/errorBoundary\";\n\ninterface CharListState {\n    characters: any[],\n    error: boolean,\n    loading: boolean,\n    loadingMore: boolean,\n    offset: number,\n    charactersEnded: boolean,\n}\n\ninterface CharListProps {\n    onSelect: (id: number) => void;\n}\n\nclass CharList extends Component<CharListProps, CharListState> {\n    state = {\n        characters: [],\n        error: false,\n        loading: true,\n        loadingMore: false,\n        offset: 310,\n        charactersEnded: false,\n    }\n\n    MarvelService = new MarvelService();\n\n    itemRefs: any = [];\n\n    setRef = (ref: any) => {\n        this.itemRefs.push(ref);\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n\n    onCharactersLoad = (newCharacters: any[]) => {\n        let ended = false;\n        if (newCharacters.length < 9) {\n            ended = true;\n        }\n\n        this.setState(({ characters, offset }) => ({\n            characters: [...characters, ...newCharacters],\n            loading: false,\n            loadingMore: false,\n            offset: offset + 9,\n            charactersEnded: ended,\n        }));\n    }\n\n    onLoadingMore = () => {\n        this.setState({loadingMore: true})\n    }\n\n    focusOnItem = (index: number) => {\n        this.itemRefs.forEach((item: any) => item.classList.remove('char__item_selected'));\n        this.itemRefs[index].classList.add('char__item_selected');\n        this.itemRefs[index].focus();\n    }\n\n    componentDidMount() {\n        this.MarvelService\n            .getAllCharacters()\n            .then(this.onCharactersLoad)\n            .catch(this.onError);\n    }\n\n    loadMore = () => {\n        this.onLoadingMore();\n        this.MarvelService\n            .getAllCharacters(this.state.offset)\n            .then(this.onCharactersLoad)\n            .catch(this.onError);\n    }\n\n    itemView = () => {\n        const { onSelect } = this.props;\n\n        const items = this.state.characters.map((item, index) => {\n            const { name, thumbnail, id } = item;\n\n            const img = (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\")\n                ? <img src={thumbnail} style={{objectFit: \"contain\"}} alt={name} className=\"randomchar__img\"/>\n                : <img src={thumbnail} alt={name} className=\"randomchar__img\"/>;\n\n            return(\n                    <li className=\"char__item\"\n                        key={id}\n                        tabIndex={0}\n                        ref={this.setRef}\n                        onClick={() => {\n                            onSelect(id);\n                            this.focusOnItem(index);\n                        }}\n                    >\n                        {img}\n                        <div className=\"char__name\">{name}</div>\n                    </li>\n            )\n        });\n\n        return(\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const { error, loading, loadingMore, charactersEnded } = this.state;\n\n        return (\n            <ErrorBoundary>\n                <div className=\"char__list\">\n                    {!(loading || error) ? this.itemView() : null}\n                    {(loading) ? <Spinner/> : null}\n                    {(error) ? <ErrorMessage/> : null}\n                    <button\n                        className=\"button button__main button__long\"\n                        disabled={loadingMore}\n                        style={(charactersEnded) ? {display:\"none\"} : {display:\"block\"}}\n                        onClick={() => this.loadMore()}\n                    >\n                        <div className=\"inner\">load more</div>\n                    </button>\n                </div>\n            </ErrorBoundary>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport {Component} from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Skeleton from \"../skeleton/Skeleton\";\nimport ErrorMessage from \"../errors/error\";\nimport Spinner from \"../spinner/Spinner\";\n\ninterface CharInfoProps {\n    selectedId: any;\n}\n\ninterface CharInfoState {\n    character: any,\n    loading: boolean,\n    error: boolean\n}\n\nclass CharInfo extends Component<CharInfoProps, CharInfoState> {\n    state = {\n        character: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateCharacter();\n    }\n\n    componentDidUpdate(prevProps: Readonly<CharInfoProps>, prevState: Readonly<CharInfoState>) {\n        if (this.props.selectedId !== prevProps.selectedId) {\n            this.updateCharacter();\n        }\n    }\n\n    updateCharacter = () => {\n        const { selectedId } = this.props;\n        if (!selectedId) {\n            return;\n        }\n\n        this.onLoading();\n\n        this.marvelService\n            .getCharacter(selectedId)\n            .then(this.onCharacterLoad)\n            .catch(this.onError);\n    }\n\n    onCharacterLoad = (character: any) => {\n        const { name, description, thumbnail, homepage, wiki, comics } = character;\n        this.setState({\n            character: {\n                name,\n                description,\n                thumbnail,\n                homepage,\n                wiki,\n                comics,\n            },\n            loading: false\n        })\n    }\n\n    onLoading = () => {\n        this.setState({\n            loading: true,\n        })\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const { character, loading, error } = this.state;\n        const skeleton = character || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !character) ? <View character={character}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {content}\n                {spinner}\n            </div>\n    )}\n}\n\n\nfunction View(props: any) {\n    let {character} = props;\n    const {name, description, homepage, wiki, thumbnail, comics} = character;\n\n    const img = (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\")\n        ? <img src={thumbnail} style={{objectFit: \"contain\"}} alt={name} className=\"randomchar__img\"/>\n        : <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>;\n\n    const correctDescription = (description === \"\")\n                                ? <div>This character has no description yet.</div> : description;\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                {img}\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {correctDescription}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : <div>This character does not have any comics.</div>}\n                {comics.map((item: any, i: number) => {\n                    // eslint-disable-next-line array-callback-return\n                    if (i > 9) return;\n                    return (\n                        <li className=\"char__comics-item\" key={i}>\n                            {item.name}\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n    )\n}\n\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\nimport { Component } from \"react\";\n\ninterface AppState {\n    selectedId: null | number\n}\n\nclass App extends Component<any, AppState> {\n    state = {\n        selectedId: null\n    }\n\n    onSelect = (id: number) => {\n        this.setState({\n            selectedId: id\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onSelect={this.onSelect}/>\n                        <CharInfo selectedId={this.state.selectedId}/>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n// import MarvelService from \"./services/MarvelService\";\n\nimport './style/style.scss';\n\n// const newMarvelService = new MarvelService();\n//\n// newMarvelService.getAllCharacters().then(res => res.data.results.forEach((item: any) => console.log(item.id)));\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}